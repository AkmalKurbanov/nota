// Font-face mixin
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false) {
	@font-face {
		font-family: $font-family;
		font-weight: $weight;
		font-style: $style;

		@if $asset-pipeline==true {
			src: font-url('#{$file-path}.eot');
			src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
			font-url('#{$file-path}.woff') format('woff'),
			font-url('#{$file-path}.ttf') format('truetype');
		}

		@else {
			src: url('#{$file-path}.eot');
			src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
			url('#{$file-path}.woff') format('woff'),
			url('#{$file-path}.ttf') format('truetype');
		}
	}
}

// End Font-face mixin




$maxWidth: 1920;
$maxWidthContainer: 1550;

@mixin adaptiv($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;

	@if $type==1 {
		// Только если меньше контейнера
		#{property}: $startSize + px;

		@media(max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	}

	@else if type==2 {
		// Только если больше контейнера
		#{property}: $startSize + px;

		@media(max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	}
	@else{
		// Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}

	
}